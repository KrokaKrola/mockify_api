generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique @db.VarChar(255)
  password     String    @db.VarChar(255)
  name         String?   @db.VarChar(500)
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime  @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  refreshToken String?   @map("refresh_token") @db.VarChar(255)
  projects     Project[]

  @@map("users")
}

model Project {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(255)
  projectId String    @unique @default(uuid()) @map("project_id") @db.Uuid
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  userId    Int       @map("user_id")
  user      User      @relation(fields: [userId], references: [id])
  entries   Entry[]

  @@map("projects")
}

model Entry {
  id             Int              @id @default(autoincrement())
  name           String           @db.VarChar(255)
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  deletedAt      DateTime?        @map("deleted_at")
  projectId      Int              @map("project_id")
  project        Project          @relation(fields: [projectId], references: [id])
  entryData      EntryData[]
  entryRelations EntryRelations[]
  entryShape     EntryShape[]

  @@map("entries")
}

model EntryShape {
  id        Int      @id @default(autoincrement())
  shape     Json     @db.JsonB
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  entryId   Int      @map("entry_id")
  entry     Entry    @relation(fields: [entryId], references: [id])
}

model EntryRelations {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  entryId   Int      @map("entry_id")
  entry     Entry    @relation(fields: [entryId], references: [id])
}

model EntryData {
  id        Int      @id @default(autoincrement())
  data      Json     @db.JsonB
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  entryId   Int      @map("entry_id")
  entry     Entry    @relation(fields: [entryId], references: [id])
}
